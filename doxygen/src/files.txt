/* ========================================================================================================================== */
/**
\page Retarget_Files Files
This section contains the listings for all files available in the Compiler component:
- \subpage retarget_io_c
- \subpage stderr_display_c
- \subpage stderr_USART_c
- \subpage stderr_user_c
- \subpage stdin_keyboard_c
- \subpage stdin_USART_c
- \subpage stdin_user_c
- \subpage stdout_display_c
- \subpage stdout_USART_c
- \subpage stdout_user_c
- \subpage tty_user_c
*/


/* ========================================================================================================================== */
/**
\page retarget_io_c retarget_io.c File

The software component Compiler adds the file \b %retarget_io.c to the project. The header file \b RTE_Components.h, which
gets included by the file \b %retarget_io.c, is configured automatically and sets the necessary \c \#defines according to the
variants selected in the RTE. \ref variant_User "User code templates" are available that help you to implement your own
functionality.

\include armcc/retarget_io.c
*/


/* ========================================================================================================================== */
/**
\page stderr_display_c stderr_display.c File

\note
To have the full flexibility for retargeting different channels to different target hardware, each display user code template
contains a function to initialize the display (here: \c stderr_init). When using the same hardware for multiple channels,
remove the initialization function from one template and call the other function during the initialization of the device's
peripherals.

\include stderr_display.c
*/


/* ========================================================================================================================== */
/**
\page stderr_USART_c stderr_USART.c File

\note
To have the full flexibility for retargeting different channels to different target hardware, each USART user code template
contains a function to initialize the USART (here: \c stderr_init). When using the same hardware for multiple channels, the
initialization functions need to be merged in one single function. Call this function during the initialization of the
device's peripherals.

\include stderr_USART.c
*/


/* ========================================================================================================================== */
/**
\page stderr_user_c stderr_user.c File

\include stderr_user.c
*/


/* ========================================================================================================================== */
/**
\page stdin_keyboard_c stdin_keyboard.c File

\include stdin_keyboard.c
*/


/* ========================================================================================================================== */
/**
\page stdin_USART_c stdin_USART.c File

\note
To have the full flexibility for retargeting different channels to different target hardware, each USART user code template
contains a function to initialize the USART (here \c stdin_init). When using the same hardware for multiple channels, the
initialization functions need to be merged in one single function. Call this function during the initialization of the
device's peripherals.

\include stdin_USART.c
*/


/* ========================================================================================================================== */
/**
\page stdin_user_c stdin_user.c File

\include stdin_user.c
*/


/* ========================================================================================================================== */
/**
\page stdout_display_c stdout_display.c File

\note
To have the full flexibility for retargeting different channels to different target hardware, each display user code template
contains a function to initialize the display (here: \c stderr_init). When using the same hardware for multiple channels,
remove the initialization function from one template and call the other function during the initialization of the device's
peripherals.

\include stdout_display.c
*/


/* ========================================================================================================================== */
/**
\page stdout_USART_c stdout_USART.c File

\note
To have the full flexibility for retargeting different channels to different target hardware, each USART user code template
contains a function to initialize the USART (here: \c stdout_init). When using the same hardware for multiple channels, the
initialization functions need to be merged in one single function. Call this function during the initialization of the
device's peripherals.

\include stdout_USART.c
*/


/* ========================================================================================================================== */
/**
\page stdout_user_c stdout_user.c File

\include stdout_user.c
*/


/* ========================================================================================================================== */
/**
\page tty_user_c tty_user.c File

\include tty_user.c
*/
